<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.jimtough</groupId>
	<artifactId>sbdaws</artifactId>
	<description>Spring Boot/Docker/AWS</description>
	<version>0.1.0</version>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.4.RELEASE</version>
	</parent>

	<properties>
		<java.version>1.8</java.version>
		<docker.image.prefix>jtough</docker.image.prefix>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<!--
				This adds a Maven "Bill of Materials" (BOM) for a particular version
				of the AWS SDK. In the "dependencies" section below, the version
				of individual AWS SDK components should NOT be specified! The BOM
				will ensure that an appropriate version of each requested component
				is used.
				-->
				<groupId>software.amazon.awssdk</groupId>
				<artifactId>bom</artifactId>
				<!-- TODO: Update the version when Amazon releases a stable production build -->
				<version>2.0.0-preview-1</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
  		<!-- AWS SDK modules -->
		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>s3</artifactId>
		</dependency>
		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>iam</artifactId>
		</dependency>
		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>ec2</artifactId>
		</dependency>
		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>ecs</artifactId>
		</dependency>
		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>ecr</artifactId>
		</dependency>
  		<!-- ++++++++++++++++++++++++++++++++++++++ -->
  		
  		<!-- logging libraries -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
		</dependency>
  		<!-- ++++++++++++++++++++++++++++++++++++++ -->
  		
  		<!-- Test dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
  		<!-- ++++++++++++++++++++++++++++++++++++++ -->
	</dependencies>

	<build>
		<!-- 
		Make the built artifact have the same name every time: "this-is-the-app.jar" 
		This allows me to hardcode the source file name in the Dockerfile "ADD" command. 
		-->
		<finalName>this-is-the-app</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>src/main/resources-filtered</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<filters>
			<filter>./maven-filter-values.properties</filter>
		</filters>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>1.3.4</version>
				<executions>
					<execution>
						<id>default</id>
						<goals>
							<goal>build</goal>
							<!-- The 'push' didn't work for me, so I push manually instead. 
							<goal>push</goal> 
							-->
						</goals>
					</execution>
				</executions>
				<configuration>
					<repository>${docker.image.prefix}/${project.artifactId}</repository>
					<tag>${project.version}</tag>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
